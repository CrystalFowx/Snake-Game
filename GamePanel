import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

public class SnakeGame extends JFrame {
    public static void main(String[] args) {
        new SnakeGame();
    }

    public SnakeGame() {
        setTitle("Snake Game");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        add(new GamePanel());
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }
}

class GamePanel extends JPanel implements ActionListener, KeyListener {
    private final int WIDTH = 600;
    private final int HEIGHT = 600;
    private final int UNIT_SIZE = 20;
    private final int DELAY = 100;

    private final LinkedList<Point> snake = new LinkedList<>();
    private Point fruit;
    private char direction = 'R';
    private boolean running = false;
    private boolean showStartup = true;
    private boolean gameOver = false;
    private javax.swing.Timer timer;
    private int score = 0;
    private int themeIndex = 0;
    private Color fruitColor;

    private final Color[] fruitColors = {Color.RED, Color.GREEN, Color.YELLOW, Color.CYAN, Color.MAGENTA};
    private final Color[] bgThemes = {new Color(200, 255, 200), new Color(200, 200, 255), new Color(255, 255, 200)};

    public GamePanel() {
        setPreferredSize(new Dimension(WIDTH, HEIGHT));
        setFocusable(true);
        addKeyListener(this);
        timer = new javax.swing.Timer(DELAY, this);
    }

    private void startGame() {
        snake.clear();
        snake.add(new Point(UNIT_SIZE * 5, UNIT_SIZE * 5)); // Starting position of snake
        spawnFruit();
        direction = 'R';
        score = 0;
        gameOver = false;
        themeIndex = 0;
        running = true;
        timer.start();
    }

    private void spawnFruit() {
        Random random = new Random();
        fruit = new Point(random.nextInt(WIDTH / UNIT_SIZE) * UNIT_SIZE,
                random.nextInt(HEIGHT / UNIT_SIZE) * UNIT_SIZE);
        fruitColor = fruitColors[random.nextInt(fruitColors.length)];
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        if (showStartup) {
            drawStartupScreen(g);
        } else if (gameOver) {
            drawGameOver(g);
        } else {
            drawWorld(g);
            drawSnake(g);
            drawFruit(g);
            drawScore(g);
        }
    }

    private void drawStartupScreen(Graphics g) {
        g.setColor(bgThemes[themeIndex % bgThemes.length]);
        g.fillRect(0, 0, WIDTH, HEIGHT);
        g.setColor(Color.BLACK);
        g.setFont(new Font("Arial", Font.BOLD, 40));
        g.drawString("Snake Game", WIDTH / 2 - 120, HEIGHT / 2 - 40);
        g.setFont(new Font("Arial", Font.PLAIN, 20));
        g.drawString("By : CrystalFowx", WIDTH / 2 - 80, HEIGHT / 2);
        g.drawString("Press Enter to Start", WIDTH / 2 - 100, HEIGHT / 2 + 40);
    }

    private void drawWorld(Graphics g) {
        g.setColor(bgThemes[themeIn